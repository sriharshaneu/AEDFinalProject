/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package starting;

import customerPackage.Customer;
import customerPackage.CustomerWelcomeForm;
import customerPackage.Order;
import customerPackage.OrderForm;
import customerPackage.ShowOrders;
import khakejaorestaurant.MyConnection;
import khakejaorestaurant.User;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sreyasborra
 */
public class ChefLoginWindow extends javax.swing.JFrame {

	/**
	 * Creates new form Chef
	 */
	Chef chef;

	public ChefLoginWindow() {
		initComponents();
	}

	ChefLoginWindow(Chef chef) {
		initComponents();
		this.chef = chef;
		refreshChefOrdersTable();
	}

	/**
	 * This method is called from within the constructor to initialize the
	 * form. WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents() {

                pnl_background = new javax.swing.JPanel();
                pHeader = new javax.swing.JPanel();
                btnLogout = new javax.swing.JButton();
                lbLogo = new javax.swing.JLabel();
                jScrollPane1 = new javax.swing.JScrollPane();
                chefOrdersTable = new javax.swing.JTable();
                jButton2 = new javax.swing.JButton();

                setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

                pnl_background.setPreferredSize(new java.awt.Dimension(1216, 711));
                pnl_background.setLayout(null);

                pHeader.setBackground(new java.awt.Color(255, 213, 0));
                pHeader.setName("pHeader"); // NOI18N
                pHeader.setPreferredSize(new java.awt.Dimension(1062, 70));
                pHeader.setLayout(null);

                btnLogout.setBackground(new java.awt.Color(255, 213, 0));
                btnLogout.setFont(new java.awt.Font("Rockwell", 0, 24)); // NOI18N
                btnLogout.setForeground(new java.awt.Color(127, 72, 101));
                btnLogout.setText("Log out");
                btnLogout.setToolTipText("");
                btnLogout.setBorder(null);
                btnLogout.setBorderPainted(false);
                btnLogout.setContentAreaFilled(false);
                btnLogout.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                btnLogout.setName(""); // NOI18N
                btnLogout.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnLogoutActionPerformed(evt);
                        }
                });
                pHeader.add(btnLogout);
                btnLogout.setBounds(1080, 19, 101, 40);

                lbLogo.setBackground(new java.awt.Color(255, 255, 255));
                lbLogo.setFont(new java.awt.Font("Rockwell Condensed", 0, 52)); // NOI18N
                lbLogo.setForeground(new java.awt.Color(127, 72, 101));
                lbLogo.setText("Khake Jao");
                lbLogo.setToolTipText("");
                pHeader.add(lbLogo);
                lbLogo.setBounds(30, 10, 330, 62);

                pnl_background.add(pHeader);
                pHeader.setBounds(0, 0, 1220, 80);

                chefOrdersTable.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {
                                {null, null, null, null},
                                {null, null, null, null},
                                {null, null, null, null},
                                {null, null, null, null}
                        },
                        new String [] {
                                "ref", "chef_order_id", "order_id", "status"
                        }
                ) {
                        boolean[] canEdit = new boolean [] {
                                false, false, false, false
                        };

                        public boolean isCellEditable(int rowIndex, int columnIndex) {
                                return canEdit [columnIndex];
                        }
                });
                jScrollPane1.setViewportView(chefOrdersTable);

                pnl_background.add(jScrollPane1);
                jScrollPane1.setBounds(30, 180, 740, 170);

                jButton2.setFont(new java.awt.Font("Rockwell", 1, 24)); // NOI18N
                jButton2.setText("Order Ready");
                jButton2.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                jButton2ActionPerformed(evt);
                        }
                });
                pnl_background.add(jButton2);
                jButton2.setBounds(30, 390, 220, 50);

                javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
                getContentPane().setLayout(layout);
                layout.setHorizontalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(127, 127, 127)
                                .addComponent(pnl_background, javax.swing.GroupLayout.DEFAULT_SIZE, 1767, Short.MAX_VALUE)
                                .addContainerGap())
                );
                layout.setVerticalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(pnl_background, javax.swing.GroupLayout.DEFAULT_SIZE, 740, Short.MAX_VALUE)
                                .addContainerGap())
                );

                pack();
        }// </editor-fold>//GEN-END:initComponents

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
	    HomepageForm homepage = new HomepageForm(true);
	    homepage.setVisible(true);
	    this.dispose();
    }//GEN-LAST:event_btnLogoutActionPerformed

        private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
		// TODO add your handling code here:

		try {

			int clickedRowIndex = chefOrdersTable.getSelectedRow();

			DefaultTableModel model = (DefaultTableModel) chefOrdersTable.getModel();
			Chef selectedOrder = (Chef) model.getValueAt(clickedRowIndex, 0);

			if (clickedRowIndex == -1) {
				JOptionPane.showMessageDialog(this, "Please select a row to dispatch order");
			} else {
				chef.updateDispatchStatusInChef(selectedOrder.getOrder_id());
			}

			OrderForm.freezeOrderBtn = false;
			OrderForm.orderReady = true;
			JOptionPane.showMessageDialog(this, "Order Dispatched");

		} catch (Exception e) {
			e.printStackTrace();
			JOptionPane.showMessageDialog(this, "Unable to dispatch. Error Occurred");
		}

		refreshChefOrdersTable();
        }//GEN-LAST:event_jButton2ActionPerformed

	private List<Chef> loadOpenOrders() {

		List<Chef> chefOpenOrders = new ArrayList<>();

		PreparedStatement ps;
		ResultSet rs;
		String query = "SELECT * FROM chef_orders WHERE status = 0;";
		try {
			ps = MyConnection.getConnection().prepareStatement(query);
			rs = ps.executeQuery();
			while (rs.next()) {
				int chef_order_id = rs.getInt("chef_order_id");
				int order_id = rs.getInt("order_id");
				int status = rs.getInt("status");
				Chef chef = new Chef();
				chef.setChef_order_id(chef_order_id);
				chef.setOrder_id(order_id);
				chef.setStatus(status);
				chefOpenOrders.add(chef);

			}

			return chefOpenOrders;

		} catch (SQLException ex) {
			Logger.getLogger(Customer.class.getName()).log(Level.SEVERE, null, ex);
		}
		return null;
	}

	private void refreshChefOrdersTable() {

		DefaultTableModel model = (DefaultTableModel) chefOrdersTable.getModel();
		model.setRowCount(0);

		List<Chef> chefOpenOrders = loadOpenOrders();

		if (chefOpenOrders == null) {
			JOptionPane.showMessageDialog(null, "No Records Found", null, JOptionPane.ERROR_MESSAGE);
		} else {
			for (Chef chefOpenOrder : chefOpenOrders) {
				Object[] row = new Object[4];

				row[0] = chefOpenOrder;
				row[1] = chefOpenOrder.getChef_order_id();
				row[2] = chefOpenOrder.getOrder_id();
				row[3] = chefOpenOrder.getStatus() == 0 ? "Open" : "Delivered";

				model.addRow(row);
			}
		}

	}

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(ChefLoginWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(ChefLoginWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(ChefLoginWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(ChefLoginWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>
		//</editor-fold>
		//</editor-fold>
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new ChefLoginWindow().setVisible(true);
			}
		});
	}

        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JButton btnLogout;
        private javax.swing.JTable chefOrdersTable;
        private javax.swing.JButton jButton2;
        private javax.swing.JScrollPane jScrollPane1;
        private javax.swing.JLabel lbLogo;
        public static javax.swing.JPanel pHeader;
        private javax.swing.JPanel pnl_background;
        // End of variables declaration//GEN-END:variables
}
